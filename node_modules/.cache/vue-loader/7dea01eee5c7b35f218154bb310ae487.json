{"remainingRequest":"/Users/Alvaro/Workspace/TFG/assistant.website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Alvaro/Workspace/TFG/assistant.website/src/views/Login.vue?vue&type=style&index=0&id=26084dc2&scoped=true&lang=scss&","dependencies":[{"path":"/Users/Alvaro/Workspace/TFG/assistant.website/src/views/Login.vue","mtime":1571669165152},{"path":"/Users/Alvaro/Workspace/TFG/assistant.website/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/Alvaro/Workspace/TFG/assistant.website/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Alvaro/Workspace/TFG/assistant.website/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/Alvaro/Workspace/TFG/assistant.website/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/Alvaro/Workspace/TFG/assistant.website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alvaro/Workspace/TFG/assistant.website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.body-login {\n  background-color: #2c3e50;\n  border-color: #2c3e50;\n  color: darkslategrey;\n}\n.login-form {\n  color: darkslategrey;\n  margin-top: 20vh;\n}\n.login-title {\n  color: darkslategrey;\n  font-weight: bold;\n  font-size: 2em;\n  text-transform: uppercase;\n}\n\n.login-input-title {\n  margin-top: 15px;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: bold;\n  color: darkslategrey;\n}\n\n.login-button {\n  min-width: 100%;\n  margin-top: 20px;\n  text-transform: uppercase;\n  color: white;\n  background-color: #2c3e50;\n  border-color: #2c3e50;\n}\n\n.login-button:focus {\n  background-color: rgb(18, 110, 83);\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"body-login\">\n    <b-card class=\"body-login\">\n      <b-col>\n        <b-row class=\"justify-content-center\">\n          <!-- login form -->\n          <b-card class=\"login-form\">\n            <!-- Title -->\n            <span class=\"login-title\">ðŸ§ </span>\n            <hr />\n            <div class=\"login-input-title\">USER</div>\n            <b-input v-model=\"usr\"></b-input>\n            <div class=\"login-input-title\">PASSWORD</div>\n            <b-input v-model=\"psswd\" :type=\"'password'\"></b-input>\n            <b-button variant=\"success\" class=\"login-button\" @click=\"login()\">log in</b-button>\n          </b-card>\n        </b-row>\n      </b-col>\n    </b-card>\n  </div>\n</template>\n\n<script>\n/* eslint-disable no-alert, no-console */\n\nexport default {\n  name: \"Login\",\n  props: {},\n  created() {},\n  data: function() {\n    return {\n      usr: \"\",\n      psswd: \"\"\n    };\n  },\n  methods: {\n    makeToast(variant = null, title, content) {\n      this.$bvToast.toast(content, {\n        title: title,\n        variant: variant,\n        solid: true\n      });\n    },\n    login: function() {\n      if (this.usr.length < 3) {\n        this.makeToast(\"primary\", \"Oups!\", `Please, insert a valid user.`);\n      } else if (this.psswd.length < 3) {\n        this.makeToast(\"primary\", \"Oups!\", `Please, insert a valid password.`);\n      } else {\n        this.$store\n          .dispatch(\"API_LOGIN\", { username: this.usr, password: this.psswd })\n          .then(r => {\n            if (r.status == 200) {\n              // save the token in local storage\n              localStorage.auth = \"Basic \" + r.data\n              this.$router.push(\"/\");\n            } else {\n              this.makeToast(\n                \"danger\",\n                \"Oups!\",\n                `[${r.status}] ${r.description}`\n              );\n            }\n          });\n      }\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.body-login {\n  background-color: #2c3e50;\n  border-color: #2c3e50;\n  color: darkslategrey;\n}\n.login-form {\n  color: darkslategrey;\n  margin-top: 20vh;\n}\n.login-title {\n  color: darkslategrey;\n  font-weight: bold;\n  font-size: 2em;\n  text-transform: uppercase;\n}\n\n.login-input-title {\n  margin-top: 15px;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: bold;\n  color: darkslategrey;\n}\n\n.login-button {\n  min-width: 100%;\n  margin-top: 20px;\n  text-transform: uppercase;\n  color: white;\n  background-color: #2c3e50;\n  border-color: #2c3e50;\n}\n\n.login-button:focus {\n  background-color: rgb(18, 110, 83);\n}\n</style>\n"]}]}