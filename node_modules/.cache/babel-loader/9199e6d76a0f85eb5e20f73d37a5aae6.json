{"remainingRequest":"/Users/Alvaro/Workspace/TFG/assistant.website/node_modules/babel-loader/lib/index.js!/Users/Alvaro/Workspace/TFG/assistant.website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Alvaro/Workspace/TFG/assistant.website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Alvaro/Workspace/TFG/assistant.website/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Alvaro/Workspace/TFG/assistant.website/src/views/Login.vue","mtime":1571669165152},{"path":"/Users/Alvaro/Workspace/TFG/assistant.website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alvaro/Workspace/TFG/assistant.website/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Alvaro/Workspace/TFG/assistant.website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alvaro/Workspace/TFG/assistant.website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable no-alert, no-console */\nexport default {\n  name: \"Login\",\n  props: {},\n  created: function created() {},\n  data: function data() {\n    return {\n      usr: \"\",\n      psswd: \"\"\n    };\n  },\n  methods: {\n    makeToast: function makeToast() {\n      var variant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var title = arguments.length > 1 ? arguments[1] : undefined;\n      var content = arguments.length > 2 ? arguments[2] : undefined;\n      this.$bvToast.toast(content, {\n        title: title,\n        variant: variant,\n        solid: true\n      });\n    },\n    login: function login() {\n      var _this = this;\n\n      if (this.usr.length < 3) {\n        this.makeToast(\"primary\", \"Oups!\", \"Please, insert a valid user.\");\n      } else if (this.psswd.length < 3) {\n        this.makeToast(\"primary\", \"Oups!\", \"Please, insert a valid password.\");\n      } else {\n        this.$store.dispatch(\"API_LOGIN\", {\n          username: this.usr,\n          password: this.psswd\n        }).then(function (r) {\n          if (r.status == 200) {\n            // save the token in local storage\n            localStorage.auth = \"Basic \" + r.data;\n\n            _this.$router.push(\"/\");\n          } else {\n            _this.makeToast(\"danger\", \"Oups!\", \"[\".concat(r.status, \"] \").concat(r.description));\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,KAAA,EAAA,EAFA;AAGA,EAAA,OAHA,qBAGA,CAAA,CAHA;AAIA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA;AAFA,KAAA;AAIA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA,UAAA,OAAA,uEAAA,IAAA;AAAA,UAAA,KAAA;AAAA,UAAA,OAAA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,OAAA,EAAA,OAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAAA;AAKA,KAPA;AAQA,IAAA,KAAA,EAAA,iBAAA;AAAA;;AACA,UAAA,KAAA,GAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,SAAA,CAAA,SAAA,EAAA,OAAA;AACA,OAFA,MAEA,IAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,SAAA,CAAA,SAAA,EAAA,OAAA;AACA,OAFA,MAEA;AACA,aAAA,MAAA,CACA,QADA,CACA,WADA,EACA;AAAA,UAAA,QAAA,EAAA,KAAA,GAAA;AAAA,UAAA,QAAA,EAAA,KAAA;AAAA,SADA,EAEA,IAFA,CAEA,UAAA,CAAA,EAAA;AACA,cAAA,CAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA;AACA,YAAA,YAAA,CAAA,IAAA,GAAA,WAAA,CAAA,CAAA,IAAA;;AACA,YAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA,WAJA,MAIA;AACA,YAAA,KAAA,CAAA,SAAA,CACA,QADA,EAEA,OAFA,aAGA,CAAA,CAAA,MAHA,eAGA,CAAA,CAAA,WAHA;AAKA;AACA,SAdA;AAeA;AACA;AA9BA;AAVA,CAAA","sourcesContent":["<template>\n  <div class=\"body-login\">\n    <b-card class=\"body-login\">\n      <b-col>\n        <b-row class=\"justify-content-center\">\n          <!-- login form -->\n          <b-card class=\"login-form\">\n            <!-- Title -->\n            <span class=\"login-title\">ðŸ§ </span>\n            <hr />\n            <div class=\"login-input-title\">USER</div>\n            <b-input v-model=\"usr\"></b-input>\n            <div class=\"login-input-title\">PASSWORD</div>\n            <b-input v-model=\"psswd\" :type=\"'password'\"></b-input>\n            <b-button variant=\"success\" class=\"login-button\" @click=\"login()\">log in</b-button>\n          </b-card>\n        </b-row>\n      </b-col>\n    </b-card>\n  </div>\n</template>\n\n<script>\n/* eslint-disable no-alert, no-console */\n\nexport default {\n  name: \"Login\",\n  props: {},\n  created() {},\n  data: function() {\n    return {\n      usr: \"\",\n      psswd: \"\"\n    };\n  },\n  methods: {\n    makeToast(variant = null, title, content) {\n      this.$bvToast.toast(content, {\n        title: title,\n        variant: variant,\n        solid: true\n      });\n    },\n    login: function() {\n      if (this.usr.length < 3) {\n        this.makeToast(\"primary\", \"Oups!\", `Please, insert a valid user.`);\n      } else if (this.psswd.length < 3) {\n        this.makeToast(\"primary\", \"Oups!\", `Please, insert a valid password.`);\n      } else {\n        this.$store\n          .dispatch(\"API_LOGIN\", { username: this.usr, password: this.psswd })\n          .then(r => {\n            if (r.status == 200) {\n              // save the token in local storage\n              localStorage.auth = \"Basic \" + r.data\n              this.$router.push(\"/\");\n            } else {\n              this.makeToast(\n                \"danger\",\n                \"Oups!\",\n                `[${r.status}] ${r.description}`\n              );\n            }\n          });\n      }\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.body-login {\n  background-color: #2c3e50;\n  border-color: #2c3e50;\n  color: darkslategrey;\n}\n.login-form {\n  color: darkslategrey;\n  margin-top: 20vh;\n}\n.login-title {\n  color: darkslategrey;\n  font-weight: bold;\n  font-size: 2em;\n  text-transform: uppercase;\n}\n\n.login-input-title {\n  margin-top: 15px;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: bold;\n  color: darkslategrey;\n}\n\n.login-button {\n  min-width: 100%;\n  margin-top: 20px;\n  text-transform: uppercase;\n  color: white;\n  background-color: #2c3e50;\n  border-color: #2c3e50;\n}\n\n.login-button:focus {\n  background-color: rgb(18, 110, 83);\n}\n</style>\n"],"sourceRoot":"src/views"}]}